Given a string containing only digits, restore it by returning all possible valid IP address combinations.

For example:
Given "25525511135",

return ["255.255.11.135", "255.255.111.35"]. (Order does not matter)

好奇怪，我机子上可以输出答案，但是OJ上的0000实例我的程序却没有输出。

vector<string> String::restoreIpAddresses(string s)
{
	vector<string> result;
	int len = s.length();
	if (len < 3 || len > 12) 
		return result;

	vector<int> point(4, 0);
	
	int k = 1;
	while (k >= 1)
	{
		if (point[k] == 0)
			point[k] = point[k - 1] + 1;
		
		if (point[k] > point[k - 1] + 3 || point[k] >= len - 3 + k )
		{
			point[k] = 0; 
			k--;
			if (k >= 1)
				point[k]++;
			continue;
		}
		
		if (!vaildSubIP(s.substr(point[k - 1], point[k] - point[k - 1])))
		{
			point[k] = 0;
			k--;
			if (k >= 1)
				point[k]++;
			continue;
		}

		if (k == 3)
		{
			if (point[k] < len - 3)
				point[k]++;
			else
			{
				if (!vaildSubIP(s.substr(point[k], len - point[k])))
				{
					point[k] = 0;
					k--;
					if (k >= 1)
						point[k]++;
				}
				else
				{
					string newStr = s;
					for (int i = 1; i <= 3; i++)
						newStr.insert(point[i] + i - 1, ".");
					result.push_back(newStr);
					point[k]++;
				}
			}
		}
		else
		{
			k++;
		}
	}

	return result;
}

bool String::vaildSubIP(string s)
{
	int len = s.length();
	
	int num = 0;
	for (int i = 0; i < len; i++)
		num = num * 10 + s[i] - '0';
	if (num > 255 || s[0] == '0' && len > 1)
		return false;
}
