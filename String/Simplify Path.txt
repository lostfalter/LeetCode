Given an absolute path for a file (Unix-style), simplify it.

For example,
path = "/home/", => "/home"
path = "/a/./b/../../c/", => "/c"
click to show corner cases.

Corner Cases:
Did you consider the case where path = "/../"?
In this case, you should return "/".
Another corner case is the path might contain multiple slashes '/' together, such as "/home//foo/".
In this case, you should ignore redundant slashes and return "/home/foo".

简化路径。

需要知道各种点的意义
..代表上级目录
.什么都不代表

string String::simplifyPath(string path)
{
	string result = "/";
	int len = path.length();

	if (len == 0)
		return result;

	string word;
	
	vector<string> pathList;

	for (int i = 0; i < len; i++)
	{
		if (path[i] == '/')
		{
			if (i > 0 && path[i - 1] != '/')
			{
				if (word == "..")
				{
					if (!pathList.empty())
						pathList.pop_back();
				}
				else if (word == ".")
					;
				else
					pathList.push_back(word);
				word.clear();
			}
		}
		else
		{
			word.push_back(path[i]);
		}
	}
	
	if (!word.empty())
	{
		if (word == "..")
		{
			if (!pathList.empty())
				pathList.pop_back();
		}
		else if (word == ".")
			;
		else
			pathList.push_back(word);
	}
	if (!pathList.empty())
	{
		result.clear();
	}
	for (int i = 0; i < pathList.size(); i++)
		result.append("/" + pathList[i]);
	return result;
}
