Given a binary tree and a sum, determine if the tree has a root-to-leaf path such that adding up all the values along the path equals the given sum.

For example:
Given the below binary tree and sum = 22,
              5
             / \
            4   8
           /   / \
          11  13  4
         /  \      \
        7    2      1
return true, as there exist a root-to-leaf path 5->4->11->2 which sum is 22.


深度优先遍历。

bool BinaryTree::hasPathSum(TreeNode* root, int sum)
{
	if (root == NULL)
		return false;


	TreeNode* p = NULL;
	vector<TreeNode*> path;
	stack<int> direct;


	path.push_back(root);
	direct.push(0);
	while (!path.empty())
	{
		p = path.back();
		if (direct.top() > 1)
		{
			if (p->left == NULL && p->right == NULL)
			{
				int temp = 0;
				for (int i = 0; i < path.size(); i++)
				{
					temp += path[i]->val;
				}
				if (temp == sum)
					return true;
			}
			direct.pop();
			path.pop_back();
			if (!path.empty())
				direct.top()++;
			continue;
		}

		if (direct.top() == 0)
		{
			if (p->left)
			{
				path.push_back(p->left);
				direct.push(0);
			}
			else
			{
				direct.top()++;
			}
		}
		else
		{
			if (p->right)
			{
				path.push_back(p->right);
				direct.push(0);
			}
			else
			{
				direct.top()++;
			}
		}

	}
	return false;
}