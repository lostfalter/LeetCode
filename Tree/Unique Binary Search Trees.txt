Given n, how many structurally unique BST's (binary search trees) that store values 1...n?

For example,
Given n = 3, there are a total of 5 unique BST's.

   1         3     3      2      1
    \       /     /      / \      \
     3     2     1      1   3      2
    /     /       \                 \
   2     1         2                 3
   
 
注意看题，是BST。
可以看出规律（通过题解）。
f[n] = f[0] * f[n - 1] + f[1] * f[n -2] + ...........
 
int BinaryTree::numTrees(int n)
{
	vector<int> f(n + 1);
	f[0] = 1;
	f[1] = 1;
	for (int i = 2; i <= n; i++)
	{
		for (int j = 0; j < i; j++)
			f[i] += f[j] * f[i - j - 1];
	}
	return f[n];
}
