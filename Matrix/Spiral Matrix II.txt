Given an integer n, generate a square matrix filled with elements from 1 to n2 in spiral order.

For example,
Given n = 3,

You should return the following matrix:
[
 [ 1, 2, 3 ],
 [ 8, 9, 4 ],
 [ 7, 6, 5 ]
]

生成一个矩阵，数字从1到N2，螺旋方式排列。

vector<vector<int>> Matrix::generateMatrix(int n)
{
	vector<vector<int>> result;
	if (n == 0)
		return result;

	for (int i = 0; i < n; i++)
	{
		vector<int> row(n);
		result.push_back(row);
	}

	int count = 1;

	int up = 0;
	int down = n - 1;
	int left = 0;
	int right = n - 1;

	while (left < right && up < down)
	{
		for (int i = left; i <= right; i++)
			result[up][i] = count++;

		for (int i = up + 1; i <= down; i++)
			result[i][right] = count++;

		for (int i = right - 1; i >= left; i--)
			result[down][i] = count++;

		for (int i = down - 1; i >= up + 1; i--)
			result[i][left] = count++;

		left++;
		right--;
		up++;
		down--;
	}

	if (up == down)
		result[up][up] = count;
	
	return result;

}