Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it is able to trap after raining.

For example, 
Given [0,1,0,2,1,0,1,3,2,1,2,1], return 6.


The above elevation map is represented by array [0,1,0,2,1,0,1,3,2,1,2,1]. In this case, 6 units of rain water (blue section) are being trapped. Thanks Marcos for contributing this image!

和算直方图中最大矩形面积有点像。
仿造写了一个，AC了。

int Solution::trap(int A[], int n)
{
	if (n <= 1)
		return 0;
	
	stack<int> s;
	int index = 0;
	int total = 0;
	int rain;
	int barIndex;
	while (index < n)
	{
		if (s.empty() || A[index] < A[s.top()])
		{
			s.push(index++);
		}
		else
		{
			barIndex = s.top();
			s.pop();
			if (s.empty())
				continue;
			
			if (A[s.top()] > A[index])
				rain = (A[index] - A[barIndex]) * (index - s.top() - 1);
			else
				rain = (A[s.top()] - A[barIndex]) * (index - s.top() - 1);
			total += rain;
		}
	}

	return total;
}