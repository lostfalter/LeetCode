Given an array of non-negative integers, you are initially positioned at the first index of the array.

Each element in the array represents your maximum jump length at that position.

Your goal is to reach the last index in the minimum number of jumps.

For example:
Given array A = [2,3,1,1,4]

The minimum number of jumps to reach the last index is 2. (Jump 1 step from index 0 to 1, then 3 steps to the last index.)

Jump Game第二弹。
求最少的跳数可以从头跳到尾。

使用END推进的话，大概用n2才可以，使用广度优先搜索，复杂度降低到n。

int Solution::jump(int A[], int n)
{
	if (n == 0)
		return -1;
	if (n == 1)
		return 0;

	int start = 0;
	int end = 0;
	int levelMax = 0;
	int level = 0;
	while (1)
	{
		for (int i = start; i <= end; i++)
		{
			if (A[i] + i > levelMax)
				levelMax = A[i] + i;
		}

		if (levelMax >= n - 1)
		{
			return level + 1;
		}
		start = end + 1;
		end = levelMax;
		level++;
	}

}