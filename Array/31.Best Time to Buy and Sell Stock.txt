Say you have an array for which the ith element is the price of a given stock on day i.

If you were only permitted to complete at most one transaction (ie, buy one and sell one share of the stock), design an algorithm to find the maximum profit.

只允许买卖一次股票，寻找买卖股票的最佳时间点。
微软实习面试中遇到此问题。

动态规划问题，存储之前最便宜的股票价格，就知道现在卖出可以赚多少。

int Solution::maxProfit(vector<int>& prices)
{
	int len = prices.size();
	if (len <= 1)
		return 0;
	
	int min = prices[0];
	int max = 0;

	for (int i = 1; i < len; i++)
	{
		if (prices[i] > min)
		{
			if (prices[i] - min > max)
				max = prices[i] - min;
		}
		else if (prices[i] < min)
			min = prices[i];
	}

	return max;

}