Given two integers n and k, return all possible combinations of k numbers out of 1 ... n.

For example,
If n = 4 and k = 2, a solution is:

[
  [2,4],
  [3,4],
  [2,3],
  [1,2],
  [1,3],
  [1,4],
]

给回溯加以一些限制，还是可以解的。

vector<vector<int>> Solution::combine(int n, int k)
{
	vector<vector<int>> result;
	if (n == 0 || k == 0)
		return result;
	vector<int> select(n);
	vector<int> selectedCount(n);
	int w = 0;
	while (w >= 0)
	{
		if (select[w] > 1)
		{
			select[w] = 0;
			w--;
			if (w >= 0)
				select[w]++;
			continue;
		}

		if (w > 0)
			selectedCount[w] = selectedCount[w - 1] + select[w];
		else
			selectedCount[w] = select[w];

		if (w == n - 1 || selectedCount[w] == k)
		{
			if (selectedCount[w] < k)
			{
				select[w]++;
			}
			else
			{
				vector<int> temp;
				for (int i = 0; i <= w; i++)
				{
					if (select[i])
						temp.push_back(i + 1);
				}
				result.push_back(temp);

				select[w] = 0;
				w--; 
				if (w >= 0)
					select[w]++;
			}
		}
		else
		{
			w++;
		}
	}
	return result;
}
