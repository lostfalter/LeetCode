Given an index k, return the kth row of the Pascal's triangle.

For example, given k = 3,
Return [1,3,3,1].

Note:
Could you optimize your algorithm to use only O(k) extra space?

给出杨辉三角第K行的数据。
我没找出直接生成第K行的规律，那从第一行开始慢慢推导，用到的空间好像也只是O（k）。

vector<int> Solution::getRow(int rowIndex)
{
	vector<int> result(rowIndex + 1);
	vector<int> temp(rowIndex + 1);
	result[0] = 1;
	int level = 1;

	while (level <= rowIndex)
	{
		
		temp[0] = 1;
		for (int i = 1; i < level; i++)
			temp[i] = result[i - 1] + result[i];
		temp[level] = 1;
		result = temp;
		level++;
	}
	return result;
}