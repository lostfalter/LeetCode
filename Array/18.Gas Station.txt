There are N gas stations along a circular route, where the amount of gas at station i is gas[i].

You have a car with an unlimited gas tank and it costs cost[i] of gas to travel from station i to its next station (i+1). You begin the journey with an empty tank at one of the gas stations.

Return the starting gas station's index if you can travel around the circuit once, otherwise return -1.

Note:
The solution is guaranteed to be unique.

加油站问题，在书上看过，应该是动归问题。

理清逻辑，车在一段路走不通以后，新的起点肯定在这段路后面。

int Solution::canCompleteCircuit(vector<int>& gas, vector<int>& cost)
{
	int len = gas.size();
	if (len == 0)
		return -1;

	vector<int> gain(len);
	for (int i = 0; i < len; i++)
		gain[i] = gas[i] - cost[i];

	int start = 0;
	bool flag = true;
	while (1)
	{
		if (gain[start] < 0)
		{
			start++;
			if (start == len)
			{
				flag = false;
				break;
			}
			else
				continue;
		}

		int totalGain = 0;
		int i;
		for (i = 0; i < len; i++)
		{
			totalGain += gain[(start + i) % len];
			if (totalGain < 0)
				break;
		}
		if (totalGain < 0)
		{
			start = start + i + 1;
			if (start >= len)
			{
				flag = false;
				break;
			}
		}
		else
		{
			break;
		}
	}
	if (!flag)
		return -1;
	else
		return start;
}