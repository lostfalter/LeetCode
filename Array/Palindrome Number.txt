Determine whether an integer is a palindrome. Do this without extra space.

click to show spoilers.

Some hints:
Could negative integers be palindromes? (ie, -1)

If you are thinking of converting the integer to string, note the restriction of using extra space.

You could also try reversing an integer. However, if you have solved the problem "Reverse Integer", you know that the reversed integer might overflow.
How would you handle such case?

There is a more generic way of solving this problem.


有几点，小于0的不是回文数。
因子取的时候可以注意一下，我一开始取while（x/FACTOR) 这样factor有可能溢出。。。

bool Solution::isPalindrome(int x)
{
	if (x < 0)
		return false;
	int leftFactor = 1;
	int rightFactor = 1;

	while (x / leftFactor >= 10)
	{
		leftFactor *= 10;
	}

	while (leftFactor >= rightFactor)
	{
		if ((x / leftFactor) % 10 == (x / rightFactor) % 10)
		{
			leftFactor /= 10;
			rightFactor *= 10;
		}
		else
			break;
	}

	if (leftFactor >= rightFactor)
		return false;
	else
		return true;
}