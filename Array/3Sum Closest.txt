Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. Return the sum of the three integers. You may assume that each input would have exactly one solution.

    For example, given array S = {-1 2 1 -4}, and target = 1.

    The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).

找到最接近目标值的三个数相加的值。

	
int Solution::threeSumClosest(vector<int>& num, int target)
{
	sort(num.begin(), num.end());

	int len = num.size();
	

	int index1, index2;
	int min = INT_MAX;
	for (int i = 0; i < len; i++)
	{
		if (i > 0 && num[i] == num[i - 1])
			continue;
		index1 = i + 1;
		index2 = len - 1;
		
		while (index1 < index2)
		{
			int sum = num[i] + num[index1] + num[index2] - target;
			if (abs(sum) < abs(min))
				min = sum;
			if (sum == 0)
			{
				return target;
			}
			else if (sum < 0)
				index1++;
			else
				index2--;
		}
	}
	return min + target;
}