Given a set of distinct integers, S, return all possible subsets.

Note:
Elements in a subset must be in non-descending order.
The solution set must not contain duplicate subsets.
For example,
If S = [1,2,3], a solution is:

[
  [3],
  [1],
  [2],
  [1,2,3],
  [1,3],
  [2,3],
  [1,2],
  []
]

回溯即可。

vector<vector<int>> Solution::subsets(vector<int>& S)
{
	vector<vector<int>> result;
	int len = S.size();
	if (len == 0)
	{
		result.push_back(vector<int>());
		return result;
	}

	sort(S.begin(), S.end());
	vector<int> select(len);
	
	int k = 0;
	while (k >= 0)
	{
		if (select[k] > 1)
		{
			select[k] = 0;
			k--;
			if (k >= 0)
				select[k]++;
			continue;
		}

		if (k == len - 1)
		{
			vector<int> subset;
			for (int i = 0; i < len; i++)
			{
				if (select[i])
					subset.push_back(S[i]);
			}
			result.push_back(subset);
			select[k]++;
		}
		else
		{
			k++;
		}
	}
	
	return result;
}