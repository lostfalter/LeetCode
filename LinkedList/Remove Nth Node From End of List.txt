Given a linked list, remove the nth node from the end of list and return its head.

For example,

   Given linked list: 1->2->3->4->5, and n = 2.

   After removing the second node from the end, the linked list becomes 1->2->3->5.
Note:
Given n will always be valid.
Try to do this in one pass.

一遍完成，应该是快慢指针。

ListNode* LinkedList::removeNthFromEnd(ListNode* head, int n)
{
	if (head == NULL || n == 0)
		return head;

	ListNode* slow = head;
	ListNode* fast = head;

	for (int i = 0; i < n; i++)
		fast = fast->next;

	if (fast == NULL)
	{
		head = head->next;
		delete slow;
		return head;
	}

	while (fast->next)
	{
		slow = slow->next;
		fast = fast->next;
	}

	ListNode* temp = slow->next;
	slow->next = slow->next->next;
	delete temp;
	return head;
}