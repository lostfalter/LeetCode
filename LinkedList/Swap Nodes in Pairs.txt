Given a linked list, swap every two adjacent nodes and return its head.

For example,
Given 1->2->3->4, you should return the list as 2->1->4->3.

Your algorithm should use only constant space. You may not modify the values in the list, only nodes itself can be changed.

ListNode* LinkedList::swapPairs(ListNode* head)
{
	if (head == NULL)
		return head;
	
	ListNode* fakeHead = new ListNode(-1);
	fakeHead->next = head;
	ListNode* pre = fakeHead;
	ListNode* p = head;
	ListNode* temp = NULL;
	while (p && p->next)
	{
		temp = p;
		p = p->next->next;
		
		temp->next->next = temp;
		pre->next = temp->next;
		temp->next = p;
		pre = temp;
	}
	head = fakeHead->next;
	delete fakeHead;
	return head;
}