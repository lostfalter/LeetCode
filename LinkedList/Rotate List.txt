Given a list, rotate the list to the right by k places, where k is non-negative.

For example:
Given 1->2->3->4->5->NULL and k = 2,
return 4->5->1->2->3->NULL.

向右旋转链表K个位置，和数组右移差不多。

ListNode* LinkedList::rotateRight(ListNode* head, int k)
{
	if (k == 0 || head == NULL)
		return head;

	int len = 0;
	ListNode* p = head;
	while (p)
	{
		p = p->next;
		len++;
	}

	k = k % len;
	if (k == 0)
		return head;

	p = head;
	int count = 1;
	while (count < len - k)
	{
		p = p->next;
		count++;
	}

	ListNode* newHead = p->next;
	
	p->next = NULL;

	p = newHead;
	while (p->next)
	{
		p = p->next;
	}
	p->next = head;

	return newHead;
	
}
